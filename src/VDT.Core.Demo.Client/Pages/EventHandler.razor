@page "/eventhandler"

<GlobalEventHandler OnKeyDown="@OnWindowKeyDown"
                    OnKeyUp="@OnWindowKeyUp"
                    OnResize="@OnWindowResize"
                    OnClick="@OnWindowClick"
                    OnMouseDown="@OnWindowMouseDown"
                    OnMouseUp="@OnWindowMouseUp"
                    OnMouseMove="@OnWindowMouseMove" />

<h1>VDT.Core.Demo.Client - GlobalEventHandler</h1>

<p>A test for handling window level events in Blazor.</p>

<div class="row">

    @if (keyDownEventArgs != null) {
        <div class="col-12 col-lg-6 col-xl-4 mb-4">
            <div class="card text-dark bg-light">
                <div class="card-body">
                    <h2 class="card-title">Last key down event</h2>

                    <ul class="card-text">
                        <li>Alt key: @keyDownEventArgs.AltKey</li>
                        <li>Code: @keyDownEventArgs.Code</li>
                        <li>Ctrl key: @keyDownEventArgs.CtrlKey</li>
                        <li>Key: @keyDownEventArgs.Key</li>
                        <li>Location: @keyDownEventArgs.Location</li>
                        <li>Meta key: @keyDownEventArgs.MetaKey</li>
                        <li>Repeat: @keyDownEventArgs.Repeat</li>
                        <li>Shift key: @keyDownEventArgs.ShiftKey</li>
                        <li>Type: @keyDownEventArgs.Type</li>
                    </ul>
                </div>
            </div>
        </div>
    }

    @if (keyUpEventArgs != null) {
        <div class="col-12 col-lg-6 col-xl-4 mb-4">
            <div class="card text-dark bg-light">
                <div class="card-body">
                    <h2 class="card-title">Last key up event</h2>

                    <ul class="card-text">
                        <li>Alt key: @keyUpEventArgs.AltKey</li>
                        <li>Code: @keyUpEventArgs.Code</li>
                        <li>Ctrl key: @keyUpEventArgs.CtrlKey</li>
                        <li>Key: @keyUpEventArgs.Key</li>
                        <li>Location: @keyUpEventArgs.Location</li>
                        <li>Meta key: @keyUpEventArgs.MetaKey</li>
                        <li>Repeat: @keyUpEventArgs.Repeat</li>
                        <li>Shift key: @keyUpEventArgs.ShiftKey</li>
                        <li>Type: @keyUpEventArgs.Type</li>
                    </ul>
                </div>
            </div>
        </div>
    }

    @if (resizeEventArgs != null) {
        <div class="col-12 col-lg-6 col-xl-4 mb-4">
            <div class="card text-dark bg-light">
                <div class="card-body">
                    <h2 class="card-title">Last resize event</h2>

                    <ul class="card-text">
                        <li>Width: @resizeEventArgs.Width</li>
                        <li>Height: @resizeEventArgs.Height</li>
                    </ul>
                </div>
            </div>
        </div>
    }

    @if (clickEventArgs != null) {
        <div class="col-12 col-lg-6 col-xl-4 mb-4">
            <div class="card text-dark bg-light">
                <div class="card-body">
                    <h2 class="card-title">Last click</h2>

                    <ul class="card-text">
                        <li>Alt key: @clickEventArgs.AltKey</li>
                        <li>Button: @clickEventArgs.Button</li>
                        <li>Buttons: @clickEventArgs.Buttons</li>
                        <li>Client X: @clickEventArgs.ClientX</li>
                        <li>Client Y: @clickEventArgs.ClientY</li>
                        <li>Ctrl key: @clickEventArgs.CtrlKey</li>
                        <li>Detail: @clickEventArgs.Detail</li>
                        <li>Meta key: @clickEventArgs.MetaKey</li>
                        <li>Offset X: @clickEventArgs.OffsetX</li>
                        <li>Offset Y: @clickEventArgs.OffsetY</li>
                        <li>Screen X: @clickEventArgs.ScreenX</li>
                        <li>Screen Y: @clickEventArgs.ScreenY</li>
                        <li>Shift key: @clickEventArgs.ShiftKey</li>
                        <li>Type: @clickEventArgs.Type</li>
                    </ul>
                </div>
            </div>
        </div>
    }

    @if (mouseDownEventArgs != null) {
        <div class="col-12 col-lg-6 col-xl-4 mb-4">
            <div class="card text-dark bg-light">
                <div class="card-body">
                    <h2 class="card-title">Last mouseDown</h2>

                    <ul class="card-text">
                        <li>Alt key: @mouseDownEventArgs.AltKey</li>
                        <li>Button: @mouseDownEventArgs.Button</li>
                        <li>Buttons: @mouseDownEventArgs.Buttons</li>
                        <li>Client X: @mouseDownEventArgs.ClientX</li>
                        <li>Client Y: @mouseDownEventArgs.ClientY</li>
                        <li>Ctrl key: @mouseDownEventArgs.CtrlKey</li>
                        <li>Detail: @mouseDownEventArgs.Detail</li>
                        <li>Meta key: @mouseDownEventArgs.MetaKey</li>
                        <li>Offset X: @mouseDownEventArgs.OffsetX</li>
                        <li>Offset Y: @mouseDownEventArgs.OffsetY</li>
                        <li>Screen X: @mouseDownEventArgs.ScreenX</li>
                        <li>Screen Y: @mouseDownEventArgs.ScreenY</li>
                        <li>Shift key: @mouseDownEventArgs.ShiftKey</li>
                        <li>Type: @mouseDownEventArgs.Type</li>
                    </ul>
                </div>
            </div>
        </div>
    }

    @if (mouseUpEventArgs != null) {
        <div class="col-12 col-lg-6 col-xl-4 mb-4">
            <div class="card text-dark bg-light">
                <div class="card-body">
                    <h2 class="card-title">Last mouseUp</h2>

                    <ul class="card-text">
                        <li>Alt key: @mouseUpEventArgs.AltKey</li>
                        <li>Button: @mouseUpEventArgs.Button</li>
                        <li>Buttons: @mouseUpEventArgs.Buttons</li>
                        <li>Client X: @mouseUpEventArgs.ClientX</li>
                        <li>Client Y: @mouseUpEventArgs.ClientY</li>
                        <li>Ctrl key: @mouseUpEventArgs.CtrlKey</li>
                        <li>Detail: @mouseUpEventArgs.Detail</li>
                        <li>Meta key: @mouseUpEventArgs.MetaKey</li>
                        <li>Offset X: @mouseUpEventArgs.OffsetX</li>
                        <li>Offset Y: @mouseUpEventArgs.OffsetY</li>
                        <li>Screen X: @mouseUpEventArgs.ScreenX</li>
                        <li>Screen Y: @mouseUpEventArgs.ScreenY</li>
                        <li>Shift key: @mouseUpEventArgs.ShiftKey</li>
                        <li>Type: @mouseUpEventArgs.Type</li>
                    </ul>
                </div>
            </div>
        </div>
    }

    @if (mouseMoveEventArgs != null) {
        <div class="col-12 col-lg-6 col-xl-4 mb-4">
            <div class="card text-dark bg-light">
                <div class="card-body">
                    <h2 class="card-title">Last mouseMove</h2>

                    <ul class="card-text">
                        <li>Alt key: @mouseMoveEventArgs.AltKey</li>
                        <li>Button: @mouseMoveEventArgs.Button</li>
                        <li>Buttons: @mouseMoveEventArgs.Buttons</li>
                        <li>Client X: @mouseMoveEventArgs.ClientX</li>
                        <li>Client Y: @mouseMoveEventArgs.ClientY</li>
                        <li>Ctrl key: @mouseMoveEventArgs.CtrlKey</li>
                        <li>Detail: @mouseMoveEventArgs.Detail</li>
                        <li>Meta key: @mouseMoveEventArgs.MetaKey</li>
                        <li>Offset X: @mouseMoveEventArgs.OffsetX</li>
                        <li>Offset Y: @mouseMoveEventArgs.OffsetY</li>
                        <li>Screen X: @mouseMoveEventArgs.ScreenX</li>
                        <li>Screen Y: @mouseMoveEventArgs.ScreenY</li>
                        <li>Shift key: @mouseMoveEventArgs.ShiftKey</li>
                        <li>Type: @mouseMoveEventArgs.Type</li>
                    </ul>
                </div>
            </div>
        </div>
    }

</div>

@code {
    private KeyboardEventArgs? keyDownEventArgs;
    private KeyboardEventArgs? keyUpEventArgs;
    private ResizeEventArgs? resizeEventArgs;
    private MouseEventArgs? clickEventArgs;
    private MouseEventArgs? mouseDownEventArgs;
    private MouseEventArgs? mouseUpEventArgs;
    private MouseEventArgs? mouseMoveEventArgs;

    public async Task OnWindowKeyDown(KeyboardEventArgs args) {
        keyDownEventArgs = args;

        await Task.CompletedTask;
    }

    public async Task OnWindowKeyUp(KeyboardEventArgs args) {
        keyUpEventArgs = args;

        await Task.CompletedTask;
    }

    public void OnWindowResize(ResizeEventArgs args) {
        resizeEventArgs = args;
    }

    public void OnWindowClick(MouseEventArgs args) {
        clickEventArgs = args;
    }

    public void OnWindowMouseDown(MouseEventArgs args) {
        mouseDownEventArgs = args;
    }

    public void OnWindowMouseUp(MouseEventArgs args) {
        mouseUpEventArgs = args;
    }

    public void OnWindowMouseMove(MouseEventArgs args) {
        mouseMoveEventArgs = args;
    }
}
